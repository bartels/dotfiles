# vi: ft=sh
# shellcheck disable=SC1090

# Shortcut for starting a Django development environment.
# Will start a virtualenv and tmux session and try to autodiscover
# settings.py and the python package directory
djstart() {
    # Name of a virtualenv
    project="$1"

    if [ "$project" ]; then
        # Start virtualenv
        # This will auto-cd into the project directory if configured to do so
        # by virtualenvwrapper.
        workon "$project"
    fi

    # Project directory is cwd
    project_dir="$PWD"

    # Discover settings.py file by searching cwd
    settings_path=$(fd -d 2 settings.py "$project_dir" | head -1)
    if [ -z "$settings_path" ]; then
        echo "Could not find a settings.py file, exiting..."
        return 1
    fi

    # The project's python package name
    package_dir=$(dirname "$settings_path")
    module_name=$(basename "$package_dir")

    # If we weren't given a project name as an argument, we'll try to use the
    # module name. For this to work, there will need to be an existing
    # virtualenv with the same name as the project's main python package.
    if [ -z "$project" ]; then
        project="$module_name"
        echo "Found $settings_path: Assuming virtualenv is \"$project\""
        workon "$project"
    fi

    # Add node_modules bin dir to path if it exists
    if [ -d node_modules ]; then
        PATH="$project_dir/node_modules/.bin":$PATH
    fi

    # get absolute module path
    RUNPATH=$(realpath "$package_dir/../")

    # Export env variables
    export PATH=$PATH \
           PYTHONPATH="$RUNPATH:$PYTHONPATH" \
           DJANGO_SETTINGS_MODULE=${DJANGO_SETTINGS_MODULE:-"$module_name.settings"} \
           DJANGO_ENV=${DJANGO_ENV:-"dev"}

    # dont' write .pyc files
    export PYTHONDONTWRITEBYTECODE=1

    # start tmux session
    if [ $? -eq 0 ]; then
        tmux-start-new-session "$project"
    fi

    deactivate
    unset DJANGO_SETTINGS_MODULE
    echo "Bye"
}

# djstart command completion
_djstart_complete() {
    arg="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(lsvirtualenv -b | grep "$arg") )
}
complete -o default -o nospace -F _djstart_complete djstart

# Shortcut for running django-admin.py
dj() {
    if hash django-admin 2>/dev/null; then
        django-admin "$@"
    else
        django-admin.py "$@"
    fi
}

# dj command completion
complete -o default -F _django_completion dj
